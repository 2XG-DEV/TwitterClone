{"version":3,"sources":["SidebarOption.js","Sidebar.js","firebase.js","Tweetbox.js","Post.js","Feed.js","Widgets.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarOption","active","text","Icon","className","Sidebar","Twitter","Home","NotificationsNone","Search","MailOutline","BookmarkBorder","ListAlt","MoreHoriz","Button","variant","fullWidth","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Tweetbox","useState","tweetMessage","setTweetMessage","tweetImage","setTweetImage","Avatar","type","value","placeholder","onChange","e","target","onClick","preventDefault","collection","add","displayName","userName","verified","image","avatar","Post","forwardRef","ref","username","src","alt","fontSize","Feed","posts","setPosts","useEffect","onSnapshot","snapshot","docs","map","doc","data","post","Widgets","tweetId","sourceType","screenName","options","height","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1462faa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./SidebarOption.css\";\r\n\r\nconst SidebarOption = ({ active, text, Icon }) => {\r\n  return (\r\n    <div className={`sidebarOption ${active && \"sidebarOption--active\"}`}>\r\n      <Icon></Icon>\r\n      <h2>{text}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarOption;\r\n","import {\r\n  Twitter,\r\n  Home,\r\n  NotificationsNone,\r\n  Search,\r\n  MailOutline,\r\n  BookmarkBorder,\r\n  MoreHoriz,\r\n  ListAlt,\r\n} from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport \"./Sidebar.css\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <Twitter className=\"sidebar__icon\" />\r\n\r\n      <SidebarOption text=\"Home\" Icon={Home} active={true} />\r\n      <SidebarOption text=\"Notifications\" Icon={NotificationsNone} />\r\n      <SidebarOption text=\"Explore\" Icon={Search} />\r\n      <SidebarOption text=\"Messages\" Icon={MailOutline} />\r\n      <SidebarOption text=\"Bookmarks\" Icon={BookmarkBorder} />\r\n      <SidebarOption text=\"Lists\" Icon={ListAlt} />\r\n      <SidebarOption text=\"More\" Icon={MoreHoriz} />\r\n      <Button variant=\"outlined\" className=\"sidebar__tweet\" fullWidth>\r\n        Tweet\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCnCwQILJ_3U4JCiiHG19pi3VVKm49XqcY\",\r\n  authDomain: \"twitterclone-472cd.firebaseapp.com\",\r\n  projectId: \"twitterclone-472cd\",\r\n  storageBucket: \"twitterclone-472cd.appspot.com\",\r\n  messagingSenderId: \"809159850480\",\r\n  appId: \"1:809159850480:web:2fe6930c5540ae1c70c535\",\r\n  measurementId: \"G-LX7YG8FRR2\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\nexport default db;\r\n","import { Button, Avatar } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport db from \"./firebase\";\r\nimport \"./Tweetbox.css\";\r\n\r\nconst Tweetbox = () => {\r\n  const [tweetMessage, setTweetMessage] = useState(\"\");\r\n  const [tweetImage, setTweetImage] = useState(\"\");\r\n\r\n  const sendTweet = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"posts\").add({\r\n      displayName: \"Gigel\",\r\n      userName: \"gigi\",\r\n      verified: true,\r\n      text: tweetMessage,\r\n      image: tweetImage,\r\n      avatar:\r\n        \"https://images.trenta.ro/Products/Original/Diavola_-_Homepage_B-3224.jpg\",\r\n    });\r\n    setTweetImage(\"\");\r\n    setTweetMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"tweetbox\">\r\n      <form>\r\n        <div className=\"tweetbox__input\">\r\n          <Avatar />\r\n          <input\r\n            type=\"text\"\r\n            value={tweetMessage}\r\n            placeholder=\"Was geht?\"\r\n            onChange={(e) => setTweetMessage(e.target.value)}\r\n          />\r\n        </div>\r\n        <input\r\n          value={tweetImage}\r\n          onChange={(e) => setTweetImage(e.target.value)}\r\n          type=\"text\"\r\n          placeholder=\"Enter Image URL\"\r\n          className=\"tweetbox__inputimg\"\r\n        />\r\n        <Button onClick={sendTweet} type=\"submit\" className=\"tweetbox__button\">\r\n          Tweet\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweetbox;\r\n","import React, { forwardRef } from \"react\";\r\nimport \"./Post.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\n\r\nconst Post = forwardRef(\r\n  ({ displayName, username, verified, text, image, avatar }, ref) => {\r\n    return (\r\n      <div className=\"post\" ref={ref}>\r\n        <div className=\"post__avatar\">\r\n          <Avatar src={avatar} />\r\n        </div>\r\n        <div className=\"post__body\">\r\n          <div className=\"post__header\">\r\n            <div className=\"post__headerText\">\r\n              <h3>\r\n                {displayName}\r\n                <span className=\"post__headerSpecial\">\r\n                  {verified && <VerifiedUserIcon className=\"post__badge\" />} @\r\n                  {username}\r\n                </span>\r\n              </h3>\r\n            </div>\r\n            <div className=\"post__headerDescription\">\r\n              <p>{text}</p>\r\n            </div>\r\n          </div>\r\n          <img src={image} alt=\"\" />\r\n          <div className=\"post__footer\">\r\n            <ChatBubbleOutlineIcon fontSize=\"small\" />\r\n            <RepeatIcon fontSize=\"small\" />\r\n            <FavoriteBorderIcon fontSize=\"small\" />\r\n            <PublishIcon fontSize=\"small\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Post;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Tweetbox from \"./Tweetbox\";\r\nimport Post from \"./Post\";\r\nimport \"./Feed.css\";\r\nimport db from \"./firebase\";\r\nimport FlipMove from \"react-flip-move\";\r\n\r\nfunction Feed() {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"posts\").onSnapshot((snapshot) =>\r\n      setPosts(snapshot.docs.map((doc) => doc.data()))\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"feed\">\r\n      <div className=\"feed__header\">\r\n        <h2>Home</h2>\r\n      </div>\r\n\r\n      <Tweetbox />\r\n\r\n      <FlipMove>\r\n        {posts.map((post) => (\r\n          <Post\r\n            key={post.text}\r\n            displayName={post.displayName}\r\n            username={post.username}\r\n            verified={post.verified}\r\n            text={post.text}\r\n            avatar={post.avatar}\r\n            image={post.image}\r\n          />\r\n        ))}\r\n      </FlipMove>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","import { Search } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport \"./Widgets.css\";\r\nimport {\r\n  TwitterTimelineEmbed,\r\n  TwitterShareButton,\r\n  TwitterTweetEmbed,\r\n} from \"react-twitter-embed\";\r\n\r\nconst Widgets = () => {\r\n  return (\r\n    <div className=\"widgets\">\r\n      <div className=\"widgets__input\">\r\n        <Search className=\"widgets__searchIcon\" />\r\n        <input type=\"text\" placeholder=\"Search Twitter\" />\r\n      </div>\r\n      <div className=\"widgets__widgetContainer\">\r\n        <h2>wazzup</h2>\r\n        <TwitterTweetEmbed tweetId={\"858551177860055040\"} />\r\n        <TwitterTimelineEmbed\r\n          sourceType=\"profile\"\r\n          screenName=\"cleverqazi\"\r\n          options={{ height: 400 }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Widgets;\r\n","import \"./App.css\";\nimport Sidebar from \"./Sidebar\";\nimport Feed from \"./Feed\";\nimport Widgets from \"./Widgets\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Sidebar />\n      <Feed />\n      <Widgets />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}